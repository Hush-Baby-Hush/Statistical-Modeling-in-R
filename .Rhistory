knitr::opts_chunk$set(echo = TRUE)
x <- c(1.4,1.6,1.6,2,2,2.4,2.4,2.6)
y <- c(201,169,209,185,185,241,201,249)
fit <- lm(y ~ x)
summary(fit)
x = c(2, 6, 8, 8, 12, 16, 20, 20, 22, 26)
y = c(58, 105, 88, 118, 117, 137, 157, 169, 149, 202)
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
x = c(2, 6, 8, 8, 12, 16, 20, 20, 22, 26)
y = c(58, 105, 88, 118, 117, 137, 157, 169, 149, 202)
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
s2_e
x <- c(1.4,1.6,1.6,2,2,2.4,2.4,2.6)
y <- c(201,169,209,185,185,241,201,249)
fit <- lm(y ~ x)
summary(fit)
fit
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX,SXY,
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX,SXY
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX
SXY
s2_e
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX
SXY
s2_e
summary(fit)$coefficients[2, 4]
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX
SXY
s2_e
2 * (1 - pt( abs( beta1.hat/sqrt(s2_e/SXX ) ), n-2 ))
summary(fit)$coefficients[2, 4]
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX
SXY
s2_e
fit = lm(y~x)
confint(fit, level = 0.95)
x = c(2, 6, 8, 8, 12, 16, 20, 20, 22, 26)
y = c(58, 105, 88, 118, 117, 137, 157, 169, 149, 202)
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
### (b)
2 * (1 - pt( abs( beta1.hat/sqrt(s2_e/SXX ) ), n-2 ))
# use R function
summary(fit)
summary(fit)$coefficients[2, 4]
### (c)
1 -  pt( (beta1.hat - 4)/sqrt(s2_e/SXX ), n-2 )
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX
SXY
s2_e
x <- c(1.4,1.6,1.6,2,2,2.4,2.4,2.6)
y <- c(201,169,209,185,185,241,201,249)
fit <- lm(y ~ x)
summary(fit)
fit
### (a)
SXX = sum( (x-mean(x))^2 )
SXY = sum( (x-mean(x)) * (y-mean(y)) )
beta1.hat = SXY/SXX
beta0.hat = mean(y) - beta1.hat * mean(x)
e = y - (beta0.hat + beta1.hat * x)
n = length(y)
s2_e <- sum(e^2)/(n-2)
SXX
SXY
s2_e
anova(fit)
knitr::opts_chunk$set(echo = TRUE)
summary(fit)
x1 = c(2.4,0.7,1.5,3.7,1.6,1.2,3.3,3.4,2.9,1.8,2.0,2.0,0.8,1.6,2.6,0.5)
x2 = c(2,2,2,3,2,2,3,4,3,4,3,4,3,4,4,3)
x3 = c(1.9,1.6,1.8,1.7,1.7,1.6,1.6,2.1,2.0,2.2,1.9,2.0,2.1,1.9,2.4,1.9)
y = c(415,570,580,615,645,760,890,925,950,1010,1035,1060,1085,1095,1180,1185)
fit = lm(y ~ x1+x2+x3)
summary(fit)
x1 = c(2.4,0.7,1.5,3.7,1.6,1.2,3.3,3.4,2.9,1.8,2.0,2.0,0.8,1.6,2.6,0.5)
x2 = c(2,2,2,3,2,2,3,4,3,4,3,4,3,4,4,3)
x3 = c(1.9,1.6,1.8,1.7,1.7,1.6,1.6,2.1,2.0,2.2,1.9,2.0,2.1,1.9,2.4,1.9)
y = c(415,570,580,615,645,760,890,925,950,1010,1035,1060,1085,1095,1180,1185)
fit = lm(y ~ x1+x2+x3)
summary(fit)
y_ = 200-100*x1+260*x2+50*x3
sum((y-y_)^2)
sum((y-ave)^2)
x1 = c(2.4,0.7,1.5,3.7,1.6,1.2,3.3,3.4,2.9,1.8,2.0,2.0,0.8,1.6,2.6,0.5)
x2 = c(2,2,2,3,2,2,3,4,3,4,3,4,3,4,4,3)
x3 = c(1.9,1.6,1.8,1.7,1.7,1.6,1.6,2.1,2.0,2.2,1.9,2.0,2.1,1.9,2.4,1.9)
y = c(415,570,580,615,645,760,890,925,950,1010,1035,1060,1085,1095,1180,1185)
fit = lm(y ~ x1+x2+x3)
summary(fit)
y_ = 200-100*x1+260*x2+50*x3
ave = sum(y)/16
sum((y-y_)^2)
sum((y-ave)^2)
x1 = c(2.4,0.7,1.5,3.7,1.6,1.2,3.3,3.4,2.9,1.8,2.0,2.0,0.8,1.6,2.6,0.5)
x2 = c(2,2,2,3,2,2,3,4,3,4,3,4,3,4,4,3)
x3 = c(1.9,1.6,1.8,1.7,1.7,1.6,1.6,2.1,2.0,2.2,1.9,2.0,2.1,1.9,2.4,1.9)
y = c(415,570,580,615,645,760,890,925,950,1010,1035,1060,1085,1095,1180,1185)
fit = lm(y ~ x1+x2+x3)
summary(fit)
y_ = 200-100*x1+260*x2+50*x3
ave = sum(y)/16
sum((y-y_)^2)
sum((y-ave)^2)
ave_x = sum(x1)/16
sum((x1-ave_x)^2)
x1 = c(2.4,0.7,1.5,3.7,1.6,1.2,3.3,3.4,2.9,1.8,2.0,2.0,0.8,1.6,2.6,0.5)
x2 = c(2,2,2,3,2,2,3,4,3,4,3,4,3,4,4,3)
x3 = c(1.9,1.6,1.8,1.7,1.7,1.6,1.6,2.1,2.0,2.2,1.9,2.0,2.1,1.9,2.4,1.9)
y = c(415,570,580,615,645,760,890,925,950,1010,1035,1060,1085,1095,1180,1185)
fit = lm(y ~ x1+x2+x3)
summary(fit)
new = data.frame(x1=3.3, x2=4, x3 = 2.2)
predict.lm(fit, new, interval = c("prediction"), level = 0.9)
confint(fit, "x1", level = 0.95)
confint(fit, "x1", level = 0.975)
confint(fit, "x1", level = 0.95)
Brand1 = c(20, 24, 27, 26, 33)
Brand2 = c(27, 38, 32, 39, 34)
Brand3 = c(22, 24, 19, 26, 29)
plots = c(rep("Brand1", 5),rep("Brand2", 5),rep("Brand3", 5))
seeds = c(Brand1, Brand2, Brand3)
plots
seeds
results = glm(seeds ~ factor(plots))
results
results = glm(seeds ~ factor(plots))
summary(anov(results))
results = glm(seeds ~ factor(plots))
summary(aov(results))
ave(Brand1)
average = sum(Brand1)/5
average = sum(Brand1)/5
average
var(Brand1)
mean(Brand1)
TukeyHSD(aov(results))
kruskal.test(Thiamin ~ factor(Grain))
kruskal.test(Tseeds ~ factor(plots))
kruskal.test(seeds ~ factor(plots))
y = c(20, 24, 27, 26, 33, 27, 38, 32, 39, 34, 22, 24, 19, 26, 29)
x = c(5, 4, 7, 6, 8, 4, 6, 5, 7, 3, 2, 3, 4, 5, 6)
v1 = c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
v2 = c(0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
plot(x, y)
y = c(20, 24, 27, 26, 33, 27, 38, 32, 39, 34, 22, 24, 19, 26, 29)
x = c(5, 4, 7, 6, 8, 4, 6, 5, 7, 3, 2, 3, 4, 5, 6)
v1 = c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
v2 = c(0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
plot(x, y, col = 1+v1+3*v2, pch =1+v1+3*v2 )
fit = lm(y~x+v1+v2)
summary(fit)
fit = lm(y~x+v1+v2)
anova(fit)
fit = lm(y~x+v1+v2)
summary(fit)
anova(lm(y~1), fit)
fit = lm(y~x+v1+v2+0)
summary(fit)
fit = lm(y~x+v1+v2)
summary(fit)
fit1 = lm(y~x+v1+v2)
summary(fit)
fit2 = lm(y~x)
fit2 = lm(y~x)
anova(fit2, fit1)
sum(fit1$residuals^2)
sum(fit1$residuals^2)
sum(fit2$residuals^2)
sum((x-mean(x))^2)
y = c(20, 24, 27, 26, 33, 27, 38, 32, 39, 34, 22, 24, 19, 26, 29)
x = c(5, 4, 7, 6, 8, 4, 6, 5, 7, 3, 2, 3, 4, 5, 6)
v1 = c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
v2 = c(0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
fit = lm(y~x+v1+v2)
plot(x, y, col = 1+v1+3*v2, pch =1+v1+3*v2 )
abline(fit$coeff[1], fit$coeff[2], col=1, lty=1)
abline(fit$coeff[1]+fit$coeff[3], fit$coeff[2], col=2, lty=2)
abline(fit$coeff[1]+fit$coeff[4], fit$coeff[2], col=4, lty=3)
sum(x^2)-sum(x)^2/15
sum(fit2$residuals^2)
summary(fit1)
new = data.frame(x=2)
confint(fit,new,"v2", level=0.95)
new = data.frame(x=2)
predict(fit,new,"v2", level=0.95)
new = data.frame(v1=0, v2=1, x=2)
predict(fit,new,interval="prediction", level=0.95)
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
data(sat)
head(sat)
fit = lm(total~expend+ratio+salary+takers)
fit = lm(total~expend+ratio+salary+takers, data = sat)
plot(fit$fitted.values,fit$residuals)
abline(h=0,lty=2)
qqnorm(resid(fit), col = "blue")
qqline(resid(fit), col = "orange", lwd = 2)
?savings
?sat
?savings
n = 50
p = 5
lev = influence(fit)$hat
lev[lev>2*p/n]
halfnorm(lev, 4, labs = row.names(sat), ylab = "Leverages")
bound = rstudent(fit)
qt(0.05/(2*n),df=df.residual(fit))
which(abs(rstudent(fit)[hlobs]) > abs(cv))
cv=qt(0.05/(2*n),df=df.residual(fit))
which(abs(rstudent(fit)[hlobs]) > abs(cv))
cv=qt(0.05/(2*n),df=df.residual(fit))
(hlobs <- which(influence(submod)$hat > 2 * p / n))
cv=qt(0.05/(2*n),df=df.residual(fit))
(hlobs <- which(influence(fit)$hat > 2 * p / n))
which(abs(rstudent(fit)[hlobs]) > abs(cv))
cook = cooks.distance(fit)
halfnorm(cook, labs = row.names(sat), ylab = "Cook's distance",
main = "Half-normal plot of Cook's distance")
max(cook)
summary(fit)
fit1 = update(fit, .~. - expend)
summary(fit1)
step(fit, direction = "backward")
str(fit)
step(lm(total ~ 1), total ~ expend + ratio + salary + takers,
direction = "forward")
step(lm(total ~ 1), total ~ expend + ratio + salary + takers, data = sat,
direction = "forward")
attach(sat)
step(lm(total ~ 1), total ~ expend + ratio + salary + takers,
direction = "forward")
step(fit, direction = "both")
summary(lm(formula = total ~ ratio + salary + takers, data = sat))
summary(lm(formula = total ~ expend + takers, data = sat))
aic.null = n*log(RSS.null/n) + 2*p.null
aic.null = n*log(RSS.null/n) + 2*p.null
n=34
p.null=3
p.full=5
RSS.null=528
RSS.full=448
aic.null = n*log(RSS.null/n) + 2*p.null
aic.full = n*log(RSS.full/n) + 2*p.full
(aic.null,aic.full)
aic.null = n*log(RSS.null/n) + 2*p.null
aic.full = n*log(RSS.full/n) + 2*p.full
(aic.null aic.full)
aic.null = n*log(RSS.null/n) + 2*p.null
aic.full = n*log(RSS.full/n) + 2*p.full
(aic.null; aic.full)
aic.null = n*log(RSS.null/n) + 2*p.null
aic.full = n*log(RSS.full/n) + 2*p.full
c(aic.null, aic.full)
bic.null = n*log(RSS.null/n) + log(n)*p.null
bic.full = n*log(RSS.full/n) + log(n)*p.full
c(bic.null, bic.full)
syy=748
rsq.null=1-Rss.null/syy
syy=748
rsq.null=1-RSS.null/syy
rsq.full=0.40107
Adjusted.Rsq.null = 1-(1-rsq.null^2)*(n-1)/(n-p.null-1)
Adjusted.Rsq.full = 1-(1-rsq.full^2)*(n-1)/(n-p.null-1)
syy=748
rsq.null=1-RSS.null/syy
rsq.full=0.40107
Adjusted.Rsq.null = 1-(1-rsq.null^2)*(n-1)/(n-p.null-1)
Adjusted.Rsq.full = 1-(1-rsq.full^2)*(n-1)/(n-p.null-1)
c(Adjusted.Rsq.null,Adjusted.Rsq.full)
syy=748
rsq.null=1-RSS.null/syy
rsq.full=0.40107
Adjusted.Rsq.null = 1-(1-rsq.null^2)*(n-1)/(n-p.null-1)
Adjusted.Rsq.full = 1-(1-rsq.full^2)*(n-1)/(n-p.full-1)
c(Adjusted.Rsq.null,Adjusted.Rsq.full)
syy=748
rsq.null=1-RSS.null/syy
rsq.full=0.40107
Adjusted.Rsq.null = 1-(1-rsq.null)*(n-1)/(n-p.null-1)
Adjusted.Rsq.full = 1-(1-rsq.full)*(n-1)/(n-p.full-1)
c(Adjusted.Rsq.null,Adjusted.Rsq.full)
